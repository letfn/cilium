- labels:
    - key: name
      value: host-to-app-vault
  endpointSelector:
    matchLabels:
      app: vault
  ingress:
    - fromEndpoints:
        - fromEntities:
            - host
      toPorts:
        - ports:
            - port: "8200"
              protocol: TCP
            - port: "8201"
              protocol: TCP


- labels:
    - key: name
      value: host-to-app-pihole
  endpointSelector:
    matchLabels:
      app: pihole
  ingress:
    - fromEndpoints:
        - fromEntities:
            - host
      toPorts:
        - ports:
            - port: "53"
              protocol: ANY

- labels:
    - key: name
      value: host-to-app-traefik
  endpointSelector:
    matchLabels:
      app: traefik
  ingress:
    - fromEndpoints:
        - fromEntities:
            - host
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP
            - port: "443"
              protocol: TCP

- labels:
    - key: name
      value: host-to-app-home
  endpointSelector:
    matchLabels:
      app: home
  ingress:
    - fromEndpoints:
        - fromEntities:
            - host
      toPorts:
        - ports:
            - port: "2222"
              protocol: TCP

- labels:
    - key: name
      value: test-app-home-to-zone-kitt
  endpointSelector:
    matchLabels:
      zone: kitt
  ingress:
    - fromEndpoints:
        - matchLabels:
            app: home

- labels:
    - key: name
      value: test-app-traefik-to-zone-kitt
  endpointSelector:
    matchLabels:
      zone: kitt
  ingress:
    - fromEndpoints:
        - matchLabels:
            app: traefik

- labels:
    - key: name
      value: host-to-health
  endpointSelector:
    matchLabels:
      'reserved:health': ""
  ingress:
    - fromEntities:
      - host

- labels:
    - key: name
      value: health-to-health
  endpointSelector:
    matchLabels:
      'reserved:health': ""
  ingress:
    - fromEntities:
      - health

- labels:
    - key: name
      value: host-to-world
  endpointSelector:
    matchLabels:
      'reserved:world': ""
  ingress:
    - fromEndpoints:
        - matchLabels:
            'reserved:host': ""

- labels:
    - key: name
      value: egress-any-to-any
  endpointSelector:
    matchEndpoints:
      - {}
  egress:
    - toEndpoints:
      - {}

- labels:
    - key: name
      value: egress-any-to-dns
  endpointSelector:
    matchEndpoints:
      - {}
  egress:
    - toPorts:
        - ports:
            - port: "53"
              protocol: ANY
          rules:
            dns:
              - matchPattern: "*"
